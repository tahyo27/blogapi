plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.blog'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	asciidoctorExt
}

repositories {
	mavenCentral()
}
ext {
	snippetsDir = file('build/generated-snippets')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'

	//Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.projectlombok:lombok:1.18.28'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.session:spring-session-jdbc'

	//Spring REST Docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	//mariadb
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.3'

	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6' // or 'io.jsonwebtoken:jjwt-gson:0.12.6' for gson

	//Configuration-processor
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-crypto
	implementation 'org.springframework.security:spring-security-crypto:6.3.0'

	// https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on
	implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

	//resilience4j
	implementation "io.github.resilience4j:resilience4j-spring-boot3:2.2.0"

	// https://mvnrepository.com/artifact/com.google.cloud/google-cloud-storage
	implementation 'com.google.cloud:google-cloud-storage:2.40.0'

	// https://mvnrepository.com/artifact/org.jsoup/jsoup
	implementation 'org.jsoup:jsoup:1.18.1'
	// email
	implementation 'org.springframework.boot:spring-boot-starter-mail'



	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testRuntimeOnly 'com.h2database:h2'
	testCompileOnly 'org.projectlombok:lombok:1.18.28'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
	jvmArgs '-Xmx2g'
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

bootJar {
	dependsOn asciidoctor

	copy {
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}


}



